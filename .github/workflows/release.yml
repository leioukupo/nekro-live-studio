name: Build and Release

on:
  release:
    types: [created]          # 原有触发
  workflow_dispatch:          # 新增：允许手动执行
    inputs:
      ref:
        description: "要打包的分支或标签"
        required: false
        default: main

permissions:
  contents: write  # 允许上传 Release 资产

jobs:
  build-windows:
    name: Build Windows artifact
    runs-on: windows-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ github.event.inputs.ref || github.ref }}

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install Poetry & runtime dependencies
        run: |
          pip install poetry==2.1.3
          pip install pyinstaller pyyaml
          poetry config virtualenvs.create false
          poetry install --only main --no-interaction --no-ansi --no-root

      - name: Build standalone executable using PyInstaller
        run: |
          pyinstaller --clean --onefile --name nekro_live_studio main.py --distpath dist --collect-submodules bilibili_api.clients

      - name: Download static FFmpeg build
        shell: pwsh
        run: |
          Invoke-WebRequest -Uri "https://www.gyan.dev/ffmpeg/builds/ffmpeg-release-essentials.zip" -OutFile ffmpeg.zip
          Expand-Archive ffmpeg.zip -DestinationPath ffmpeg_tmp
          $folder = Get-ChildItem ffmpeg_tmp | Select-Object -First 1
          New-Item -ItemType Directory -Path dist/ffmpeg | Out-Null
          Move-Item "$($folder.FullName)/bin/*" dist/ffmpeg

      - name: Copy resources & configs
        shell: pwsh
        run: |
          New-Item -ItemType Directory -Path dist/data -Force | Out-Null
          Copy-Item -Path data/* -Destination dist/data -Recurse -Force

      - name: Restructure for packaging and create start script
        shell: pwsh
        run: |
          # 将dist文件夹重命名为nekro_live_studio
          if (Test-Path nekro_live_studio) { Remove-Item -Recurse -Force nekro_live_studio }
          Move-Item -Path dist -Destination nekro_live_studio

          # 创建启动脚本
          $scriptContent = @"
          @echo off
          cd /d %~dp0
          cd nekro_live_studio
          nekro_live_studio.exe
          "@
          Set-Content -Path "start.bat" -Value $scriptContent

      - name: Compress artifact
        shell: pwsh
        run: |
          Compress-Archive -Path nekro_live_studio, start.bat -DestinationPath nekro_live_studio_windows.zip -Force

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: nekro_live_studio_windows
          path: nekro_live_studio_windows.zip
          retention-days: 7

      - name: Attach artifact to GitHub Release
        if: github.event_name == 'release'
        uses: softprops/action-gh-release@v1
        with:
          files: nekro_live_studio_windows.zip 